@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200");

.material-symbols-outlined {
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz" 24;
}

.pageContainer {
  width: 100vw;
  height: 100vh;
  background-color: var(--background);
}

.header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  font-size: 20px;
  padding-top: 20px;
  padding-bottom: 10px;
  background-color: var(--background);
  color: var(--foreground);
}

.inverted {
  color: var(--background);
  background-color: var(--foreground);
  padding-left: 8px;
  padding-right: 8px;
}

.bodyOuterContainer {
  width: 100%;
  margin-top: 10px;
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.bodyInnerContainer {
  margin-top: 10px;
  width: 85%;
}

.inputElement {
  font-size: inherit;
  border: 1px dashed var(--foreground);
  padding: 8px;
  padding-left: 10px;
  width: 100%;
  border-radius: 0;
}

.inputElement:focus {
  border: 1px solid var(--foreground);
  outline: none;
}

.formContainer {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.titleContainer {
  margin-bottom: 30px;
}

.titleContainer h1 {
  margin-bottom: 10px;
}

.buttonElement {
  background-color: var(--foreground);
  color: var(--background);
  text-align: center;
  font-size: inherit;
  padding: 8px;
  border: none;
  cursor: pointer;
}

.buttonElement:disabled {
  background-color: var(--light_gray);
  color: var(--dark_gray);
  cursor: initial;
}

.inputElement.inputError {
  border: 1px solid var(--red);
}

.errorText {
  color: var(--red);
  margin-top: 5px;
}

.label {
  margin-bottom: 5px;
}

.sideBySideContainer {
  display: grid;
  width: 100%;
  gap: 5px;
}

.colorSwatch {
  width: 100%;
  height: 100%;
  display: flex;
  border: 1px solid var(--foreground);
}

.dropdownContainer {
  width: 100%;
  height: 100%;
}

.dropdown {
  width: 100%;
  height: 100%;
  font-family: inherit;
  font-size: inherit;
  padding-left: 5px;
  background-color: var(--background);
  color: var(--foreground);
  border: 1px dashed var(--foreground);
  border-radius: 0;
  padding: 8px;
}

.dropdown:focus {
  border: 1px solid var(--foreground);
  outline: none;
}

.slider {
  width: 100%;
}

.sliderValueContainer {
  width: 100%;
  text-align: right;
}

.captchaOuterContainer {
  width: 100vw;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.483);
  padding-top: 100px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.captchaInnerContainer {
  width: 95vw;
  background-color: var(--background);
  padding: 15px;
}

.captchaGrid {
  width: calc(95vw - 30px);
  height: calc(95vw - 30px);
  display: grid;
  gap: 0;
}

.clickablePartition {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  overflow: hidden;
}

.clickablePartition {
  border: 1px solid var(--background);
}

.imagePartitionContainer {
  width: 100%;
  height: 100%;
  transition-property: width, height;
  transition-duration: 0.25s;
}

.imagePartitionContainer.selected {
  width: 80%;
  height: 80%;
  position: relative;
}

.passwordContainer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  font-size: 0.9em;
}

.passwordInnerContainer {
  width: 100%;
  height: 100%;
  overflow-wrap: break-word;
}

.imagePartition {
  width: 100%;
  height: 100%;
}

.checkbox {
  width: 6vw;
  height: 6vw;
  background-color: var(--blue);
  border-radius: 50%;
  display: block;
  color: var(--background);
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: -10%;
  left: -10%;
}

.checkbox.webcamCheckbox {
  position: relative;
  margin-left: 3%;
  margin-top: 3%;
}

.checkIcon {
  font-size: 6vw;
}

.promptContainer {
  background-color: var(--blue);
  color: var(--background);
  padding: 12px;
  margin-bottom: 4px;
}

.promptTopText {
  font-size: 1.1em;
  margin-bottom: 5px;
}

.promptBottomText {
  font-size: 1.6em;
  font-weight: bold;
}

.verifyButtonContainer {
  width: 100%;
  display: flex;
  flex-direction: row-reverse;
  margin-top: 15px;
}

.verifyButton {
  font-size: inherit;
  font-family: inherit;
  border: none;
  cursor: pointer;
  background-color: var(--blue);
  color: var(--background);
  font-weight: bold;
  padding: 12px;
  padding-left: 20px;
  padding-right: 20px;
  border-radius: 3px;
}

.verifyButton:disabled {
  cursor: initial;
  background-color: var(--light_blue);
}

.captchaError {
  color: var(--red);
}

.stillThereScreen {
  position: absolute;
  left: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.483);
  z-index: 10;
}

.stillThereTextContainer {
  width: 80%;
  padding: 10px;
  padding-top: 15px;
  background-color: var(--background);
  border: 1px solid var(--foreground);
}

.stillThereTitle {
  margin-bottom: 10px;
}

.stillThereText {
  margin-bottom: 20px;
}

.stillHereButtonContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.signedOutBanner {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  background-color: var(--foreground);
  color: var(--background);
  z-index: 1;
  padding: 10px;
}

.bannerGrid {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.bannerText {
  flex-grow: 1;
}

.closeButtonContainer {
  flex-shrink: 1;
}

.closeButton {
  cursor: pointer;
}

.webcamContainer {
  width: calc(95vw - 30px);
  height: calc(95vw - 30px);
  background-color: var(--foreground);
  overflow: hidden;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  position: relative;
}

.webcam {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.webcamOverlayGrid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
}

.hollowClickablePartition {
  width: 100%;
  height: 100%;
  display: block;
  border: 1px solid var(--background);
  cursor: pointer;
  transition-property: border;
  transition-duration: 0.25s;
}

.hollowClickablePartition.selected {
  border: calc((95vw - 30px) / 40) solid var(--background);
}
